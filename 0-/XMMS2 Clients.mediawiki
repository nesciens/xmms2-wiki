{{Navbar}}

There are a number of client programs currently being developed for use with XMMS2. Some of them are very simple and perform only a handful of functions, while others are more fully featured. If you are a new XMMS2 client developer, you're welcome to add your client to the list.. and drop by our IRC channel to let us know what you're doing, so we may work closely together. ;) '''See also''': [[Contribs]]

= Console clients =
Clients that can be used from a command line, console or terminal.

{{ClientSummary| name=XMMS2 CLI client| description=This is the simple client that currently comes with XMMS2 itself. (source code found in src/clients/cli/xmms2_client.c) It supports most, if not all, operations possible using the xmmsclient library.}}

{{ClientSummary| name=xmms2-shell| description=xmms2-shell is an interactive shell client for XMMS2. It's like [http://freshmeat.net/projects/xmms-shell/ xmms-shell], but with commands matching the XMMS2 CLI client.}}

{{ClientSummary| name=XMMS2Curse| description=XMMS2Curse is a python client using ncurses for its interface.}}

{{ClientSummary| name=xmms2curses| description=x2c is a client written in C using curses (not specifically ncurses, all code is tested with NetBSD's curses and ncurses).}}

{{ClientSummary| name=ixmms2| description=An irssi client which now supports basic control functions as well as displaying currently playing song see the script for details, it assumes all your music is properly tagged.}}

{{ClientSummary| name=nyello| description=nyello is a C++ command-line client that features a pseudo-shell interface (akin to [http://freshmeat.net/projects/xmms-shell/ xmms-shell]). It will offer advanced features such as powerful medialib query patterns, collections and clever random playback.}}

= Graphical clients =
Clients that require X Windows or other graphical windowing systems.

== EFL (Enlightenment Foundation Libraries) ==

{{ClientSummary| name=Euphoria| description=Euphoria is a graphical XMMS2 client based on the [http://enlightenment.org Enlightenment Foundation Libraries] (EFL) currently in development.}}

== GTK ==

{{ClientSummary| name=xmms2play| description=xmms2play is a simple GTK2 xmms2 client written in C. It is designed for those that desire a minimalist design. It does not include a playlist, instead intending for external applications such as [[Client:medialib-ui | medialib-ui]] to be used for that purpose.}}

{{ClientSummary| name=gkrellxmms2| description=gkrellxmms2 is a plugin for GKrellM2 to control the XMMS2 audio player. It has buttons for play/pause, next /previous track and stop. It also shows the current artist and track name and the current position in the track.}}

{{ClientSummary| name=perlamp| description=Perlamp should be a front-end that allows it to open Wxxamp modern skins. The current status is a proof-of-concept written in Perl with perlgtk that allows incomplete viewing of several modern skins with Maki support.}}

{{ClientSummary| name=gxmms2| description=gxmms2 is a GTK2-based XMMS2 client, written in C. Its main window is small and simple. It includes a [http://wejp.homelinux.org/wejp/xmms2/pledit.png playlist editor] with a medialib search and an artist browser and a file information dialog.}}

{{ClientSummary| name=juxtapose| description="Jukebox Using XMMS Two as Player of Songs.  Eh?" :D  PyGTK based XMMS2 client loosely based on the Muine interface.}}

Shellac is a XMMS2 client written in Python with Pygtk with a very customizable GUI.
It is still under development.
For now it can be found at http://hem.bredband.net/b298027/, written by Magnus Bjernstad

{{ClientSummary| name=RXMMS2| description=RXmms2 is an XMMS/BMP clone written using Ruby and Gtk2. It aims to provide all the functionality of XMMS that you're used to while adding new advanced features like medialib operations, a more advanced display string parser.}}

== Qt ==
=== medialib-ui playlist client ===

This is a standalone medialib and playlist client. Aimed at functionality instead of pretty visuals. The idea is to have the client as a complement of a desktop-nice xmms client. It's written in python with PyQT widgetset. The code is available in the http://git.xmms.se repository. The client is very flexible and can be extended by adding own Python code in configuration directory. Written by [[Tobias RundstrÃ¶m]].

=== SAXm2s ===

saxm2s (simply access xmms2) is a simplistic qt graphical client written in python offering control of playback features, a list of the current playlist, and a simple file-add or url-add function. Info and screenshots can be found at http://www.cs.drexel.edu/~jfo24/projs/saxm2s/ and the current version can be downloaded directly from http://linsam.homelinux.com/projs/saxm2s-0.5.1.tbz2. Written by [[John O'Meara]].

== Others ==
=== HaX ===

HaX is a flexible and modular Python client for XMMS2. What started off as a PyGTK project has evolved into a reusable collection of modules that may be used to quickly build other Python XMMS2 clients, integrate a player client into a larger Python application, or simply provide smarter 'skinning' abilities. HaX is also maintained by [[Sham Chukoury]] and more information can be found at the [http://eleusis.f2o.org/projects/xmms2/hax/ HaX project] page.

=== GNUstep client ===

A GNUstep client called [http://home.gna.org/garma/shhh/ Shhh] is being developed for GNUstep by [[Banlu Kemiyatorn]].

=== Python OSD client ===

This is a quickly hacked up client that displays the artist and title of a song every time a new song starts playing, is paused, or is stopped. A lot of the code comes from the original xmms2-shell and the test python client in the XMMS2 source tree. You can download the script from Sham's [http://eleusis.f2o.org/projects/xmms2/ XMMS2 page].

=== fvwm2 client ===

fvwm2xmms [http://www.complete-systems.net/~alex/fvwm2xmms.tar.gz http://www.complete-systems.net/~alex/fvwm2xmms.tar.gz] is a basic display client written around fvwm2. It shows the currently playing song in an FvwmButtons box on the desktop. The required additions to fvwm2rc are also included in the tar ball. It is written in c and uses glib2 for its mainloop.

=== XMMS2-AMP ===

This will be a fully featured client that includes a highly configurable skinning engine, with the ability to do transparency. It will still keep the default XMMS skinning 'style'. This client will be designed to be beautiful, yet simple, and incredibly powerful. It will also feature a media library similar to the one that winamp 5 uses, with some added features. [mailto:philipthrasher@gmail.com Contact Philip Thrasher] for more information.

= Web clients =
Clients that provide web interfaces, or provide web services based on data from the XMMS2 daemon.

== XMMS2www ==
Previously on this page as 'Unnamed PHP client'. This project is reported as 'kind of dead at this time'.

More info here: http://evangelion.se/xmms2/

== XMMS2php ==

Quite ghetto and insecure php client (xmms2 simple client wrapper), not the same as 'Unnamed PHP client', but 'dead at this time and dead in most futures'

More info here: http://pastebin.ca/19609

== XMMS2 xml-rpc ==

A ruby client thats an xml-rpc server, Also included is a php xml-rpc client. 

Snag here: http://rawdod.com/ruby-php-xmms2-xml-rpc-funpack.tar.bz2

== XMMS2-Scrobbler ==

XMMS2-Scrobbler is an [http://www.audioscrobbler.com/ AudioScrobbler] client written by [[Tilman Sauerbeck]]. Learn more about it [http://code-monkey.de/projects/xmms2-scrobbler over there].

== XMMS2 Webterface ==
The XMMS2 Webterface is a Ruby class that works with an eRuby template to provide a highly customizable and flexible interface to XMMS2. It's written by [[Daniel Chokola]] and can be downloaded [http://dan.chokola.com/xmms2-webterface.rhtml here]. You can play with a demo [http://home.chokola.com:8888/xmms2.rhtml here].

= Other Clients =

== Bluetooth Client ==

The xmms2_blue client interfaces xmms2d to a Bluetooth enabled phone.  It is still fairly experimental, but basic functionality should work.  The protocol used is described in Ericsson and Sony Ericsson documents.  So most likely the client will only work with phones of those brands.
The sources can be obtained form the ''blue'' branch of [mailto:jlt_xmms2@shamrock.dyndns.org Jens Taprogge]'s xmms2 git tree at [http://git.xmms.se/ http://git.xmms.se/].

== irssi Client ==

'''xmms2Plugin''' is a module for the [http://www.irssi.org irssi] irc client to be used to control playback and query
information like playlist or the currently played song. See the README included with it for more details. You can download it [http://atomantstuff.dyndns.org here].

== LIRC Clients ==

{{ClientSummary| name=lxmms2| description=lxmms2 is a tiny XMMS2 client to control XMMS2 with a LIRC compatible remote control. Client written by Johannes Heimansberg.}}

[[Category: General]]
[[Category: Users]]