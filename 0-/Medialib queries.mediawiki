SQL QUERIES SOON TO BE DEPRECATED! See [[Collections]] instead.


Here are some examples of some SQL queries that can be run on the XMMS2 medialib, shown here as performed directly on the database, via ''sqlite''.


Select all genres:
  sqlite> SELECT value 
          FROM Media 
          WHERE key="genre"
          GROUP BY LOWER (value) ORDER BY value;
  Alternative
  Blues
  Classic Rock
  Easy Listening
  Electronic
  ...


Select all artists (using the artists view):
  sqlite> SELECT * 
          FROM artists 
  Alien Vs. The Cat
  Apoptygma Berzerk
  Astrix
  ...


Select all albums by an artist:

  sqlite> SELECT * 
          FROM albums 
          WHERE artist LIKE "S.P.O.C.K";
  S.P.O.C.K|A Piece Of The Action (Disc 1 - The Singles)
  S.P.O.C.K|A Piece Of The Action (Disc 2 - The rest)


Select five random songs:
  sqlite> SELECT * 
          FROM songs 
          ORDER BY RANDOM() LIMIT 5;
  mesh              |fragmente          |08 - So Important (original ac |-1 |319
  Kent (Sweden)     |Vapen & Ammunition |FF                             |8  |72
  Air               |Moon Safari        |sexy boy [cassius remix]       |2  |165
  Kultiration       |Om Gaia            |Babylon faller                 |-1 |60
  Chemical Brothers |Digweed Kiss100    |Get You High (feat. K-Os)      |-1 |154


Select five random songs from the 'Rock' genre:
  sqlite> SELECT m1.id, m1.value, m2.value, m3.value 
          FROM Media m1, Media m2, Media m3 
          WHERE m1.key="genre" AND m1.value="Rock" 
           AND m2.id=m1.id AND m2.key="title" 
           AND m3.id=m1.id AND m3.key="artist" 
          ORDER BY RANDOM() LIMIT 5;
   5 | Rock | Fix you          | Coldplay
  84 | Rock | Rosor & Palmblad | Kent
  14 | Rock | Til Kingdom come | Coldplay
  80 | Rock | JÃ¤rnspÃ¶ken       | Kent
  10 | Rock | Low              | Coldplay

(yeah, coldplay is not rock.. i'll update that tag asap ;)


Select five random albums:
  sqlite> SELECT * 
          FROM albums 
          ORDER BY RANDOM() LIMIT 5;
  Allister Brimble      |Immortal
  C-Mos                 |2 Million Ways (Axwell Remix)
  Nathan G              |Promo Only UK Underground Beat
  The chemical brothers |Believe
  the knife             |pass this on CDM



An example of what you might find in the property table for a medialib entry:
  sqlite> SELECT * 
          FROM Media 
          WHERE id=252;
  252| added       | 1119380208
  252| album       | Med Solen I Ã–gonen
  252| album_id    | 6688440a-58f8-4995-aec2-7444ef8c9100
  252| artist      | Lars WinnerbÃ¤ck
  252| artist_id   | 1723c867-d5c5-4a61-a40b-8c04fa7acf1b
  252| bitrate     | 256
  252| duration    | 298000
  252| laststarted | 1119382203
  252| lmod        | 1092834093
  252| mime        | application/ogg
  252| resolved    | 1
  252| title       | Pollenchock & StjÃ¤rnfall
  252| track_id    | 5faafcbc-a286-4168-91a1-d14fa98b3fc1
  252| tracknr     | 6
  252| url         | file:///music/Lars WinnerbÃ¤ck/Med Solen I Ã–gonen/06-Pollenchock & StjÃ¤rnfall.ogg

(Note that this data differs from entry to entry)

Select the name and size (number of songs) of all the playlists:

  sqlite> SELECT name, COUNT(entry) AS size
          FROM Playlist
          LEFT JOIN PlaylistEntries ON id=playlist_id
          GROUP BY playlist_id;
  name        size      
  ----------  ----------
  emptylist   0         
  autosaved   3         
  test        2         



Related links:
* http://www.sqlite.org/
* http://www.sqlite.org/vdbe.html
* http://web.utk.edu/~jplyon/sqlite/SQLite_optimization_FAQ.html

This tool might be useful to optimize queries.
* http://www.sqlite.org/cvstrac/wiki?p=IdxChk

[[Category:XMMS2 Technical Details]]