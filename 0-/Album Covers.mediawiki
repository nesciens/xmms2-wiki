Ok, XMMS2 is a pure music player so this is slightly off topic... But at least I think it's very nice to have a picture on the curren album playing. I know many people agree with me and I also know that there will be more than one client implementing this feature (possible clients: osx, windows, linux gtk/gnome/kde/euphoria, misc webfrontends). This is why I propose a generic way getting hold on album covers. The core of this idea is that a central repository of fetchers exists and the client just asks for a album cover and gets on url in return.



Some diffrent ways of handling urls and files:<br />
'''(1)''' The medialib has the url to the image (like http://amazon.com/blabla/images/albumcover.jpg), and a cached filename. A client looks for the cached file in the cache directory and if it doesn't exist the url needs to be fetched again. <br />
'''(2)''' Same as '''(1)''' but no cached filename, only the url to the album cover and the filename will be whatever the file is called, this is perhaps stupid if the albumcoverurl is something like cover.php?id=02983<br />
'''(3)''' Same as first but no cached filename, the filename is artist-album.ext or something. This is probably the best one because it can be used with diffrent xmms2d's without the need for downloading the files again.<br />
'''(4)''' Not storing anything in the medialib, just storing the album in cached directory as artist-album.ext<br />


Some possible functions in the clientlib:

 gchar *xmmsc_get_picture_filename (uint mid); 
Returns a filename or null if no file is found or something.

 x_list_t *xmmsc_get_picture_urls (uint mid);
Returns a list of urls and the user from wich the user pick the correct one and stores it in some path.

 void xmmsc_set_picture_filename (uint mid, gchar *filename);
Store the filename in medialib.


Some links:<br />
http://www.amazon.com/ -  generic<br />
http://www.psyshop.com/ - trance<br />
http://composers.c64.org/ - SID<br />


Summary:
* Some nice client api.
* Some smart way to store the files so that they will not be overwritten or redownloaded.
* Some way to write fetchers, this is easy to do in python or some other highlevel language, but this adds complexity when attaching it to the clientlib.