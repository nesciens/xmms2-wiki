__TOC__

==Prepare the Environment==
===Prerequisites===
*Windows Vista, XP, or 2000 - Vista is not known to work, but should, and pre-2000 are known to have problems.

===Easy Route===
Grab zipped-up MinGW and MSys from [http://exodus.xmms.se/~puzzles/win32/ http://exodus.xmms.se/~puzzles/win32/] and skip to [[#Building with Waf|Building with Waf]]. These packages contain everything you need to hop right into building, including an XMMS2 snapshot.
It's suggested you unzip both of these to X:\MinGW and X:\MSys, where X is your drive letter. If you choose some other paths, update /etc/fstab in MSys to reflect the location of MinGW.

TODO: List cool things included in these zips.

===Hard Route===
You've decided you want to live life dangerously and on the bleeding edge. Think over this long and hard, because the [[#Easy Route|Easy Route]] is probably all you need. New versions of MinGW or MSys probably won't make anything work out better for you, either.

Install these in order! Program versions used in this howto are in parentheses.
*[http://www.microsoft.com/downloads/details.aspx?FamilyId=0BAF2B35-C656-4969-ACE8-E4C0C0716ADB&displaylang=en Platform SDK]
**For Windows 2000 support. This is a huge download and provides us with only one header we actually need, please use the [http://exodus.xmms.se/~puzzles/win32/ zip of my Mingw directory] (which already has this header) for this and save yourself some time.
**The header, WSPiApi.h, should you choose to download it yourself, will fail to compile on a line that says _inline. Change this to __inline (add another underscore) and you're ready to go.
*[http://sourceforge.net/project/showfiles.php?group_id=2435 MinGW] (5.0.3)
**Copy the WSPiApi.h header file from your Platform SDK installation to /include/.
**Change the _inline to __inline within the header.
*[http://sourceforge.net/project/showfiles.php?group_id=2435 MSys] (1.0.11) - Do the post-install configuration to integrate MSys with MinGW.
*[http://www.python.org/download/ Python] (2.5) - At the time of this writing, only 2.4 works with the Python bindings, but both 2.4 or 2.5 should play well with Waf.

==Set up Source and Dependencies==
The order here is not so important. :)

*Download the XMMS2 source from one of the git trees [http://git.xmms.se/ here] and unpack it in your user directory. Note that xmms2-puzzles git commit 8b7ca4b48df23d463f88473f03439dbca827dbb8 (Playground branch) is being used for this howto and (as of this writing) it is the only one that contains certain patches that will ease the build process. Also note that you will probably need to use the tar or bzip tool from MSys to extract this properly.

*Download and unpack the required libraries. It's a good idea to unpack them first into an empty temporary directory as a sandbox since some of the files have READMEs and some unzip into unexpected directories.
**[http://www.gimp.org/~tml/gimp/win32/downloads.html GLib and GLib-dev] (2.12.1)
**[http://sourceforge.net/project/showfiles.php?group_id=25167 gettext] (0.13.1)
**[http://sourceforge.net/project/showfiles.php?group_id=25167 libiconv] (1.9.1)
**[http://www.gimp.org/~tml/gimp/win32/downloads.html pkg-config] (0.21) - 0.20 (as linked) works as well
**[http://www.sqlite.org/download.html SQLiteDLL and SQLite-Source] (3.3.8)
***Place the sqlite3.h file from SQLite-Source into your /usr/include directory
***Put a sqlite3.pc into /lib/pkgconfig/ similar to this:
 prefix=C:/MSys
 exec_prefix=${prefix}
 libdir=${exec_prefix}/lib
 includedir=${exec_prefix}/include
 
 Name: SQLite
 Description: SQL database engine
 Version: 3.3.8
 Libs: -L${libdir} -lsqlite3
 Cflags: -I${includedir}

TODO: Optional libraries (for plugins). The [[#Easy Route|Easy Route]] contains tons of libraries for plugins.

==Preparing for Building==
*Start MSYS
*To tell pkg-config where to find its .pc files, type:
 export PKG_CONFIG_PATH=/lib/pkgconfig
*You'll want Python in your PATH as well, so type:
 export PATH=$PATH:/path/to/python:/path/to/python/Scripts
*Alternatively you might want to add these to /etc/profile and run source /etc/profile
*Apply the patches found [http://dan.chokola.com/files/xmms2/xmms2-patches/ here] to your tree.

*Please help your local dev! TODO: Patch cleanup (git-diff/cg-mkpatch). Make a combined patch. More linux/BSD/OSX testing.

==Building with Waf==
*cd into the XMMS2 source directory
 cd /xmms2-puzzles
*Configure
 waf configure --conf-prefix=X:\\MSys
Where X is your drive letter.
*Build
 waf
*Install
 waf install
*Enjoy
 cd /c/temp/bin/ && xmms2d -v
This command probably won't actually work right away. You'll need to copy some of the DLLs in your MSys environment as well as some of the DLLs installed to \temp\lib\ into \temp\bin\. Once you do this, you should be up and running!