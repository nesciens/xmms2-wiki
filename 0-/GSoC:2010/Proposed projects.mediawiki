The following ideas are hints at possible projects that we would like to see in XMMS2. We also welcome new ideas warmly, so please feel free to suggest your own! If you are interested in working on GSoC 2009 with us, please drop by the IRC channel to ask any questions or details, we'd be glad to discuss the projects with you before you even start writing your proposal!

{{SoCItem| title=Your idea here
|description=This is where you get the chance to implement that really cool music-player related idea that has been brewing in your mind. It may be some funny interface, a crazy effect, a revolutionary way to handle collections, or something different. Surprise us! We love new ideas!
|lang=Depends
|level=Depends
|mentor=Depends}}

== The official client == 
So far the XMMS2 project is lacking an official client. Last year we tried to do a SoC for getting the ideas and the ball rolling, it was not entirely successful, we believe that the biggest reason for this was because this task is soooo big. This year we take a different approach, we will split the official client into different parts. We suggest that the parts below are written standalone but all with the Qt toolkit. Experimenting with QML is probably the way to go for much of the components.

{{SoCItem| title=GUI: Collections browser| description=A awesome collections browser is needed for the official client. How should it look like? What would be the killer feature? iTunes like interface? We need bold imaginative ideas and mock-ups.| lang=C++/Qt/QML| level=Hard| mentor=N/A}}

{{SoCItem| title=GUI: Infrastructure| description=Create a awesome infrastructure for the new official client.| lang=C++/Qt/QML| level=Hard| mentor=N/A}}

== Other clients == 

{{SoCItem| title=Mobile client| description=Control XMMS2 from your iPhone, Android, Pre or MeeGo. Could be either a tightly integrated native client or a generic HTML5 client.| lang=Any| level=Medium| mentor=[[User:TobiasRundstrÃ¶m|Tobias RundstrÃ¶m]] for iPhone and/or MeeGo stuff.}}

{{SoCItem| title=Your cool experimental client| description=Go crazy, experimental clients for iPhone, Android, maemo or maybe a fullscreen karaoke client.| lang=Any| level=Medium| mentor=N/A}}

== Interoperability with third-parties ==

{{SoCItem| title=Rockbox sync| description=[http://www.rockbox.org Rockbox] is the super cool F/OSS firmware for your music player. It stores its metadata in
an ondisk format called TagCache. This project would be to split the TagCache code from Rockbox out into a library, and then write a service client that given the
mount point of a rockbox device and the name of a collection would merge that collection to the player. It should hopefully support updating the TagCache on the device, but that can also be done by having the device sync itself. It should also support removing all songs from an arbitrary collection from the device.| lang=C| level=Medium| mentor=N/A}}

{{SoCItem| title=MPD Bridge| description=An XMMS2 client that can act as an MPD server, thus allowing to control an XMMS2 server with MPD clients. There is [http://git.xmms.se/?p=mpd-bridge.git;a=summary one such attempt in Perl] by rafl and [http://www.freax.fr/photos/main.php?g2_itemId=847 another less advanced implementation in Python] by danderson, that can be used as reference (missing some parts of the MPD protocol). ''Not a proposed project anymore, blame danderson who's doing it on his spare time free of charge!''| lang=Any (Python would be a good choice)| level=Easy| mentor=N/A}}

{{SoCItem| title=Spotify xform| description=Stream and browse spotify songs (probably worth taking a look at [http://despotify.se/ Despotify]).| lang=C| level=Medium| mentor=N/A}}

== Audio Playback Features ==

{{SoCItem| title=Effect chain clean-up and crossfade plugin| description=One of the most requested features is a cross-fade plugin. Right now cross-fade is not possible since effects (and all xform elements) are re-created for each song. Also the interface for enable and manage effect xforms is very clumsy. This SoC task is divided in three tasks. 1) create persistent xforms 2) revisit the effect configuration and 3) create a crossfade plugin. This project could also investigate passing data in frequency domain in xform chain ([http://thread.gmane.org/gmane.comp.multimedia.xmms2.devel/1535/focus=1536 see this ml thread]). The following bugs are related: 908 820 2008. I think one of the great outcomes of this project would be that except cross-fade there should be a easier way to configure, enable and chain effects.| lang=C| level=Medium| mentor=N/A}}

{{SoCItem| title=Multiple channel support| description=New formats like AC3 and DTS supports multiple channels. XMMS2 is technically prepared for this but without any decent support in the output plugins. The task will be to get full multiple channel support in XMMS2 for the PulseAudio, alsa and oss output (bonus if CoreAudio also supports it!)| lang=C| level=Medium to Hard| mentor=N/A}}

== Extending Features ==

{{SoCItem| title=Social Networking| description=Social Networks are the new hype - can you think of innovative ways to bring a social side to XMMS2, either as a new layer or using existing services (Last.Fm, Songkick, Musicbrainz, Twitter, Flickr, Facebook, Freebase, etc). Share music, talk about music, recommend new artists, share tags and ratings, possibilities are endless!| lang=Any| level=Medium| mentor=N/A}}

{{SoCItem| title=Logtable| description=We miss the log table, let's bring it back, maybe as a service client.| lang=C| level=Medium| mentor=N/A}}

== Platform support ==

{{SoCItem| title=Mac OSX integration and distribution
|description=Mac OSX is a different kind of beast than most other unixes, this also means that it needs some extra integration. We are looking for a student that could help further the XMMS2 integration with MacOSX. Primarily it would be to modify waf to be able to build .app bundles with all dependencies in them so that XMMS2 could be distributed as a APP on a DMG. Optional goodies: xmmsclient framework to be used in XCode for developing Objective-C clients, integration with media buttons (play, next, etc), listening to signals when computer goes to sleep (to pause music), automatic import of the iTunes library and much much more.
|lang=Python/Objective-C/C
|level=Medium to Hard
|mentor=[[User:TobiasRundstrÃ¶m|Tobias RundstrÃ¶m]]}}

== Bindings ==

{{SoCItem| title=emacs Client library| description=Emacs supports everything, and is a magical land where things are still amazing and special. XMMS2 also fits some of that description, so clearly one should be able to control and program clients for xmms2 from emacs! This project would be to implement the client library in ELisp as well as a small client, or better still EMMS integration.| lang=elisp| level=Easy to Medium| mentor=N/A}}