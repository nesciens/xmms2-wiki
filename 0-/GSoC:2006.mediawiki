== Google's Summer of Code 2006 ==

=== Proposed projects ===

Here is a list of proposed projects for the Summer of Code 2006.  Feel free to suggest other ideas, features or client works (see #xmms2 on freenode)!

You might also want to check out: 
[http://bugs.xmms2.xmms.se/view.php?id=520 Long Term wishlist]


==== [[Generated IPC | Auto-generated API and bindings]] ====

Currently, the C clientlib and the bindings (Python, Ruby, etc) have to be manually updated whenever a new function is introduced on the server. This work is tedious and mechanical, and the whole client API could in fact be automatically generated from a high-level description of the functions. The goal is therefore to determine the semantics of these descriptions (possibly using XML), and then use them to generate the different API source files.

;Language: Python / XML
;Level: Advanced

==== [[Collections]] ====

The access to the medialibrary should be abstracted from its implementation ; currently, clients use SQL queries to query it, and this restricts the possibilities of more advanced features (Party Shuffle-like playlists, saved views, sharing of queries among clients). The concept of [[Collections]] solved these issues by offering a higher-level representation of queries and a generalized structure for playlists. The design should first be discussed and finalized (both in terms of implementation and clientlib API), before it is implemented in the core of the server (in C language).

==== Development of the [[Client:Promoe | promoe client]] ====

The [[Client:Promoe | promoe]] client is a Winamp/XMMS1 clone for XMMS2, written in C++/Qt4.  It currently supports skins, playback control, playlists and simple medialibrary access, but still lacks most other features offered by XMMS2 (saved playlists, powerful medialibrary browsing, properties modification, etc). It should also be ported to use the new C++ bindings (scheduled for the next release, DrEvil).

==== Development of a GTK2/GNOME medialib centric client for xmms2 ====

This project would be to develop a client using the GTK2 toolkit and possibly GNOME UI extensions. The goal of this client would be to be oriented around the Media Library in a fashion analagous to RhytymBox or iTunes, but with a distinctly XMMS2 colour. Students interested in working on this should contact [[Alexander Botero-Lowry]] as he has some code they might use as a starting place (in python). 

==== Evaluate a Switch to GStreamer ====

A lot of discussion has occured in the past about the issue of converting XMMS2 to GStreamer; This project would be to evalute the viability of that conversion and maybe do the implementation if deemed as a winning situation. A student interested in this project should observe that this project is highly flamable and might end in a big bolt of fire.

==== Support for DAAP ====

The [http://daap.sourceforge.net/ DAAP] protocol (used by Apple's iTunes) allows sharing of music libraries accross the network. Implementing it in xmms2 (as a [[Transforms]] plugin) should allow remote browsing and streaming of music from other computers.

==== Support for more formats/stream types ====

New formats can be supported by writing decoder modules for the server (in C language) using our [[Transforms]] plugin interface, coupled with existing decoding libraries. Possible formats include, for instance:
* WMA
* MMS
* Last.Fm

==== Make the MediaWiki Interface look better and develop a Graphic Profile ====
XMMS2 has been in long need of a good logo set, and our wiki is also in need of being made a little less ugly. This is a great project for a student who is into web development and really wants to participate in XMMS2 development but doesn't really have a lot of C coding ability needed to do Core work.